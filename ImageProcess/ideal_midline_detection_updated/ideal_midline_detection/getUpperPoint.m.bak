function [bumpPoint, I_upper_lowest, boneInupper_boximg, boxRect_upper, isFoundBump, rev] = ...\ 
    getUpperPoint(rota_bwSkullBone)
% find the upper bump

rev = 0;
boneInupper_boximg=[];
boxRect_upper = [0,0,0,0];
isFoundBump = true;
bumpPoint = [0,0];

%% draw a box near the point where the midline intersect with the upper
% part of the skull
center_x = floor(size(rota_bwSkullBone,2)/2); % half size of the number of colum
center_y = floor(size(rota_bwSkullBone,1)/2); % half size of the number of row
vec_midline = rota_bwSkullBone(:,center_x);  % get a vector whose colum number = cneter_x
I = find(vec_midline>0);
if(isempty(I)) % there is no intersection between the center line and bone.
   rev = 1;
   return;
end

%-- upper part
I_upper=I(find(I<center_y));
% in case there is an open hole in the upper part, i.e, fracture in the
% bone on both side.
if(isempty(I_upper))
   rev = 1;
   return;
else
    I_upper_lowest = max(I_upper);
end

% set the box around the loest point of upper part
Half_width_upper = 80;
Half_height_upper = 60;

y_upper_sm = I_upper_lowest - Half_height_upper;
y_upper_lg = I_upper_lowest + Half_height_upper;

x_left_upper = center_x - Half_width_upper;
x_right_upper = center_x + Half_width_upper;

boxRect_upper=[x_left_upper, x_right_upper, y_upper_sm, y_upper_lg];


% find the lowest edge line in the box by checking every vertical line and
% get the lowest point of bone intensity of  the line
line_lowest = zeros(1,x_right_upper-x_left_upper+1);  

j=1;
for i=[x_left_upper: x_right_upper]
    vec_line=rota_bwSkullBone(:,i);
    I_bone=find(vec_line>0);
    
    %% for upper part
    I_bone_box1=I_bone(find(I_bone>=y_upper_sm));
    I_bone_box2=I_bone_box1(find(I_bone_box1<=y_upper_lg));
    I_box_lowest=max(I_bone_box2);
    
    if(isempty(I_box_lowest))
        line_lowest(j)=y_upper_sm;
    else
        line_lowest(j)=I_box_lowest;
    end
    
    j=j+1;
end

% get rid of the points where the value reaches the bottom of the box 
line_lowest2=line_lowest;
line_lowest2(find(line_lowest==y_upper_lg))=-1;

% deal with o shape.
% basically, change the way of get the lowest line, get the hightest line 
% in the interior edge.
boneInupper_boximg=rota_bwSkullBone([y_upper_sm:y_upper_lg],[x_left_upper:x_right_upper]);

edge_map=get_interior_edge(boneInupper_boximg);
% get the highest line in the curve
line_highest=zeros(1,size(edge_map,2));
for i=1:size(edge_map,2)
    [Ind_i,Ind_j]=find(edge_map(:,i));
    if(isempty(Ind_i)) 
        line_highest(i)=-1;
    else
        line_highest(i)=min(Ind_i);
    end
end

% get rid of the place where there is no edge by setting them to -1
line_highest(find(line_highest==0))=-1;

% get the bump as the lowest part in the local area
[x_coord_lowest_inline, rev] = get_local_min(line_highest); 
if(x_coord_lowest_inline == 1) % <=>if rev ~= 0 
    isFoundBump = false;
    % use the intersection point of the approximate midline and the skull instead
    x_coord_lowest=center_x;
    y_coord_lowest=I_upper_lowest;
    fprintf('No bump is found, use approximate position instead\n');
else
    x_coord_lowest=x_coord_lowest_inline+(center_x-Half_width_upper-1);
    y_coord_lowest=line_lowest(x_coord_lowest_inline);
end
    bumpPoint = [x_coord_lowest, y_coord_lowest];
end